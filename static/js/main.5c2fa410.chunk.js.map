{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","useState","value","getMovie","a","url","fetch","res","json","resJson","useEffect","movies","map","movie","index","console","log","Title","Genre","className","src","Poster","alt","Year","MovieListHeading","heading","SearchBox","onChange","event","setSearchValue","target","id","placeholder","App","setMovies","searchValue","getMovieRequest","response","responsJson","Search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAyCeA,EAtCG,SAACC,GACf,MAAiBC,mBAAS,IAC1B,GADA,oBACgBA,mBAAS,KAAlBC,EAAP,oBAEMC,EAAQ,uCAAG,WAAMD,GAAN,mBAAAE,EAAA,6DACPC,EADO,gEACsDH,GADtD,SAEKI,MAAMD,GAFX,cAEPE,EAFO,gBAGSA,EAAIC,OAHb,cAGPC,EAHO,yBAKNA,GALM,2CAAH,sDAiBd,OATAC,qBAAU,WAEN,OADaP,EAASD,KAErB,CAACA,IACHF,EAAMW,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChBC,QAAQC,IAAIb,EAASU,EAAMI,OAAOC,UAKlC,mCACKlB,EAAMW,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAGlB,sBAAKK,UAAU,mDAAf,UACI,qBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,UAC5B,yCAAYT,EAAMI,MAAlB,KAA0B,uBAA1B,UAAwCJ,EAAMU,KAA9C,IAAoD,uBAApD,QAEA,qBAAKJ,UAAU,+DCtBhBK,EATU,SAACxB,GACtB,OACI,qBAAKmB,UAAU,MAAf,SACI,6BAAKnB,EAAMyB,aCWRC,EAdG,SAAC1B,GACf,OAEI,qBAAKmB,UAAU,eAAf,SACI,uBAAOA,UAAU,eACjBjB,MAAOF,EAAME,MACbyB,SAAU,SAACC,GAAD,OAAU5B,EAAM6B,eAAeD,EAAME,OAAO5B,QACtD6B,GAAG,QACHC,YAAY,0BCsCTC,EAtCH,WACV,MAA4BhC,mBAAS,IAArC,mBAAOU,EAAP,KAAeuB,EAAf,KACA,EAAsCjC,mBAAS,IAA/C,mBAAOkC,EAAP,KAAoBN,EAApB,KAEIO,EAAe,uCAAG,WAAMD,GAAN,mBAAA/B,EAAA,6DAEhBC,EAFgB,oCAEiB8B,EAFjB,6BAMC7B,MAAMD,GANP,cAMhBgC,EANgB,gBAOIA,EAAS7B,OAPb,OAOhB8B,EAPgB,OAStBvB,QAAQC,IAAIsB,GACTA,EAAYC,QACbL,EAAUI,EAAYC,QAXF,2CAAH,sDAoBnB,OAJF7B,qBAAU,WACR0B,EAAgBD,KACf,CAACA,IAGF,sBAAKhB,UAAU,4BAAf,UACI,sBAAKA,UAAU,0CAAf,UACE,cAAC,EAAD,CAAkBM,QAAQ,WAC1B,cAAC,EAAD,CAAWU,YAAaA,EAAaN,eAAgBA,OAEvD,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,CAAWR,OAAQA,UC7BZ6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c2fa410.chunk.js","sourcesContent":["import React, { useState, useEffect }  from 'react';\r\n\r\nvar value = \"Title\";\r\nconst MovieList = (props) =>  {\r\n    const [values] = useState([]);\r\n    const [value] = useState('');\r\n\r\n    const getMovie = async(value) => {\r\n        const url=`http://www.omdbapi.com/?i=tt3896198&apikey=327386bc&t=${value}`;\r\n        const res = await fetch(url);\r\n        const resJson = await res.json();\r\n        // console.log(resJson.Genre);\r\n        return resJson;\r\n    };\r\n    \r\n    useEffect(() => {\r\n        const keys = getMovie(value);\r\n        return keys;\r\n      }, [value]);\r\n      {props.movies.map((movie, index) =>  \r\n        console.log(getMovie(movie.Title).Genre))};\r\n\r\n        \r\n    \r\n    return (\r\n        <>\r\n            {props.movies.map((movie, index) => \r\n            \r\n            \r\n            <div className='image-container d-flex justify-content-start m-2'>\r\n                <img src={movie.Poster} alt='movie'></img>\r\n                <h4>Title: {movie.Title}  <br /> Year: {movie.Year} <br />  </h4>\r\n   \r\n                <div className='overlay d-flex align-items-center justify-content'></div>\r\n            </div>\r\n            \r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\n\r\nconst MovieListHeading = (props) => {\r\n    return (\r\n        <div className='col'>\r\n            <h1>{props.heading}</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieListHeading;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n    \r\n        <div className=\"col col-sm-4\">\r\n            <input className=\"form-control\" \r\n            value={props.value}\r\n            onChange={(event)=> props.setSearchValue(event.target.value)}\r\n            id=\"movie\"\r\n            placeholder=\"Type to search....\"></input>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n{/* <div id=\"movieForm\" autocomplete=\"off\">\r\n        <div className=\"form-group col col-sm-4\">\r\n            <input className=\"form-control\" \r\n            value={props.value}\r\n            onChange={(event)=> props.setSearchValue(event.target.value)}\r\n            id=\"movie\"\r\n            placeholder=\"Type to search....\"></input>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button class=\"btn btn-danger btn-block\">\r\n                Search Movie\r\n            </button>\r\n\r\n        </div>\r\n    </div> */}"," import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\nconst FEATURED_API = \" http://www.omdbapi.com/?i=tt3896198&apikey=327386bc\";\n\nvar apikey = \"327386bc\";\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\nconst getMovieRequest = async(searchValue) => {\n  // const url = \"http://www.omdbapi.com/?apikey=\"+apikey+\"&s=\"+{searchValue};\n  const url=`http://www.omdbapi.com/?s=${searchValue}&apikey=327386bc`;\n  // const url=`http://www.omdbapi.com/?i=tt3896198&apikey=327386bc&t=${searchValue}`;\n\n\n  const response = await fetch(url);\n  const responsJson = await response.json();\n\n  console.log(responsJson);\n  if(responsJson.Search) {\n    setMovies(responsJson.Search);\n  }\n  \n};\n\nuseEffect(() => {\n  getMovieRequest(searchValue);\n}, [searchValue]);\n\n  return (\n  <div className='container-fluid movie-app'>\n      <div className='row d-flex align-items-center mt-4 mb-4'>\n        <MovieListHeading heading='Movies'/>\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\n      </div>\n      <div className='row'>\n        <MovieList movies={movies} />\n      </div>\n  </div>\n  );\n};\n\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}